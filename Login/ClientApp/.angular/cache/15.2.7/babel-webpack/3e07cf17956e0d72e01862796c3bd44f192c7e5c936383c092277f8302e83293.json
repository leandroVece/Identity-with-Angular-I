{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./TokenServices\";\nexport class UserServices {\n  constructor(http, TokenService) {\n    this.http = http;\n    this.TokenService = TokenService;\n  }\n  getRoles() {\n    return this.http.post(`${environment.Api_url}/Admin`, null).pipe(catchError(error => {\n      //console.log('Error en la solicitud:', error);\n      return throwError(() => new Error(error));\n    }));\n  }\n  Register(data) {\n    return this.http.post(`${environment.Api_url}/Authentication/register`, data).pipe(catchError(error => {\n      return throwError(() => new Error(error));\n    }));\n  }\n  Login(data) {\n    return this.http.post(`${environment.Api_url}/Authentication/login`, data).pipe(tap(op => {\n      console.log(op.response);\n      if (op.response) {\n        this.TokenService.saveToken(op.response);\n      }\n    }));\n  }\n}\nUserServices.ɵfac = function UserServices_Factory(t) {\n  return new (t || UserServices)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n};\nUserServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserServices,\n  factory: UserServices.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,EAAEC,GAAG,QAAQ,gBAAgB;AAEhD,SAASC,WAAW,QAAQ,8BAA8B;;;;AAW1D,OAAM,MAAOC,YAAY;EAErBC,YAAoBC,IAAgB,EACxBC,YAA0B;IADlB,SAAI,GAAJD,IAAI;IACZ,iBAAY,GAAZC,YAAY;EAAkB;EAE1CC,QAAQ;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAU,GAAGN,WAAW,CAACO,OAAO,QAAQ,EAAE,IAAI,CAAC,CAC/DC,IAAI,CAACV,UAAU,CAACW,KAAK,IAAG;MACrB;MACA,OAAOZ,UAAU,CAAC,MAAM,IAAIa,KAAK,CAACD,KAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;EACX;EAEAE,QAAQ,CAACC,IAAkB;IACvB,OAAO,IAAI,CAACT,IAAI,CAACG,IAAI,CAA4B,GAAGN,WAAW,CAACO,OAAO,0BAA0B,EAAEK,IAAI,CAAC,CACnGJ,IAAI,CAACV,UAAU,CAACW,KAAK,IAAG;MACrB,OAAOZ,UAAU,CAAC,MAAM,IAAIa,KAAK,CAACD,KAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;EACX;EAEAI,KAAK,CAACD,IAAe;IACjB,OAAO,IAAI,CAACT,IAAI,CAACG,IAAI,CAAoB,GAAGN,WAAW,CAACO,OAAO,uBAAuB,EAAEK,IAAI,CAAC,CACxFJ,IAAI,CAACT,GAAG,CAACe,EAAE,IAAG;MACXC,OAAO,CAACC,GAAG,CAACF,EAAE,CAACG,QAAkB,CAAC;MAClC,IAAIH,EAAE,CAACG,QAAQ,EAAE;QACb,IAAI,CAACb,YAAY,CAACc,SAAS,CAACJ,EAAE,CAACG,QAAQ,CAAC;;IAEhD,CAAC,CAAC,CAAC;EACX;;AA5BShB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YAFT;AAAM","names":["throwError","catchError","tap","environment","UserServices","constructor","http","TokenService","getRoles","post","Api_url","pipe","error","Error","Register","data","Login","op","console","log","response","saveToken","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\services\\userServices.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Roles } from '../Models/Roles.models';\r\nimport { UserLogin, UserRegister, UserResponse } from '../Models/User.Models';\r\nimport { Tokens } from '../Models/Token.models';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { ApiResponse, ApiResponseTokens } from '../Models/ApiResponse.models';\r\n\r\nimport { TokenService } from './TokenServices';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserServices {\r\n\r\n    constructor(private http: HttpClient,\r\n        private TokenService: TokenService) { }\r\n\r\n    getRoles(): Observable<Roles[]> {\r\n        return this.http.post<Roles[]>(`${environment.Api_url}/Admin`, null)\r\n            .pipe(catchError(error => {\r\n                //console.log('Error en la solicitud:', error);\r\n                return throwError(() => new Error(error));\r\n            }));\r\n    }\r\n\r\n    Register(data: UserRegister): Observable<ApiResponse<UserResponse>> {\r\n        return this.http.post<ApiResponse<UserResponse>>(`${environment.Api_url}/Authentication/register`, data)\r\n            .pipe(catchError(error => {\r\n                return throwError(() => new Error(error));\r\n            }))\r\n    }\r\n\r\n    Login(data: UserLogin): Observable<ApiResponseTokens> {\r\n        return this.http.post<ApiResponseTokens>(`${environment.Api_url}/Authentication/login`, data)\r\n            .pipe(tap(op => {\r\n                console.log(op.response as Tokens)\r\n                if (op.response) {\r\n                    this.TokenService.saveToken(op.response);\r\n                }\r\n            }))\r\n    }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}