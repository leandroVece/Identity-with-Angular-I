{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MyValidators } from '../../Utils/Validatoes';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/userServices\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nexport class ResetPasswordComponent {\n  constructor(userServices, fb, router) {\n    this.userServices = userServices;\n    this.fb = fb;\n    this.router = router;\n    this.builderRegisterForm();\n  }\n  builderRegisterForm() {\n    this.FormPassworReset = this.fb.group({\n      userName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\n      confirmPassword: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\n      roles: [['User']]\n    }, {\n      validators: MyValidators.matchPasswords\n    });\n  }\n  get passwordField() {\n    return this.FormPassworReset.get('password');\n  }\n  get confirmPasswordField() {\n    return this.FormPassworReset.get('confirmPassword');\n  }\n  get emailField() {\n    return this.FormPassworReset.get('email');\n  }\n  get userNameField() {\n    return this.FormPassworReset.get('userName');\n  }\n}\nResetPasswordComponent.ɵfac = function ResetPasswordComponent_Factory(t) {\n  return new (t || ResetPasswordComponent)(i0.ɵɵdirectiveInject(i1.UserServices), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router));\n};\nResetPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ResetPasswordComponent,\n  selectors: [[\"app-Reset-password\"]],\n  decls: 20,\n  vars: 0,\n  consts: [[1, \"w-25\", \"m-auto\"], [1, \"text-center\", \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"btn-floating\", \"mx-1\"], [1, \"fab\", \"fa-facebook-f\"], [1, \"fab\", \"fa-google\"], [1, \"fab\", \"fa-twitter\"], [1, \"fab\", \"fa-github\"], [1, \"text-center\"], [1, \"form-outline\", \"mb-4\"], [\"for\", \"loginName\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"loginName\", \"formControlName\", \"userName\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\", \"mb-4\"]],\n  template: function ResetPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"p\");\n      i0.ɵɵtext(3, \"continue with\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵelement(5, \"i\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵelement(7, \"i\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 2);\n      i0.ɵɵelement(9, \"i\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 2);\n      i0.ɵɵelement(11, \"i\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"p\", 7);\n      i0.ɵɵtext(13, \"or:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 8)(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"button\", 11);\n      i0.ɵɵtext(19, \" Submit \");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgForm, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAInE,SAASC,YAAY,QAAQ,wBAAwB;;;;;AASrD,OAAM,MAAOC,sBAAsB;EAI/BC,YAAoBC,YAA0B,EAAUC,EAAe,EAAUC,MAAc;IAA3E,iBAAY,GAAZF,YAAY;IAAwB,OAAE,GAAFC,EAAE;IAAuB,WAAM,GAANC,MAAM;IAEnF,IAAI,CAACC,mBAAmB,EAAE;EAC9B;EAGQA,mBAAmB;IACvB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,CAAC,CAAC;MACrCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACW,QAAQ,CAAC,CAAC;MAClCE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEb,YAAY,CAACc,aAAa,CAAC,CAAC;MAC1FC,eAAe,EAAE,CAAC,EAAE,EAAE,CAAChB,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,EAAEb,YAAY,CAACc,aAAa,CAAC,CAAC;MACjGE,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC;KACnB,EAAE;MACCC,UAAU,EAAEjB,YAAY,CAACkB;KAC5B,CAAC;EACN;EAEA,IAAIC,aAAa;IACb,OAAO,IAAI,CAACZ,gBAAgB,CAACa,GAAG,CAAC,UAAU,CAAE;EACjD;EAEA,IAAIC,oBAAoB;IACpB,OAAO,IAAI,CAACd,gBAAgB,CAACa,GAAG,CAAC,iBAAiB,CAAE;EACxD;EAEA,IAAIE,UAAU;IACV,OAAO,IAAI,CAACf,gBAAgB,CAACa,GAAG,CAAC,OAAO,CAAE;EAC9C;EAEA,IAAIG,aAAa;IACb,OAAO,IAAI,CAAChB,gBAAgB,CAACa,GAAG,CAAC,UAAU,CAAE;EACjD;;AApCSnB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCdnCC,+BAA0B;MAEfA,6BAAa;MAAAA,iBAAI;MACpBA,iCAA6D;MACzDA,uBAAiC;MACrCA,iBAAS;MAETA,iCAA6D;MACzDA,uBAA6B;MACjCA,iBAAS;MAETA,iCAA6D;MACzDA,uBAA8B;MAClCA,iBAAS;MAETA,kCAA6D;MACzDA,wBAA6B;MACjCA,iBAAS;MAGbA,6BAAuB;MAAAA,oBAAG;MAAAA,iBAAI;MAG9BA,+BAA+B;MACeA,yBAAQ;MAAAA,iBAAQ;MAC1DA,6BAA6F;MAKjGA,iBAAM;MAINA,mCAA6D;MAACA,yBAAO;MAAAA,iBAAS","names":["Validators","MyValidators","ResetPasswordComponent","constructor","userServices","fb","router","builderRegisterForm","FormPassworReset","group","userName","required","email","password","minLength","validPassword","confirmPassword","roles","validators","matchPasswords","passwordField","get","confirmPasswordField","emailField","userNameField","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\Reset-password copy\\Reset-password.component.ts","D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\Reset-password copy\\Reset-password.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserServices } from '../../services/userServices';\r\n\r\nimport { Router, Route } from '@angular/router';\r\nimport { MyValidators } from '../../Utils/Validatoes';\r\n\r\n\r\n@Component({\r\n    selector: 'app-Reset-password',\r\n    templateUrl: './Reset-password.component.html',\r\n    styleUrls: ['./Reset-password.component.css']\r\n})\r\n\r\nexport class ResetPasswordComponent {\r\n\r\n    FormPassworReset!: FormGroup;\r\n\r\n    constructor(private userServices: UserServices, private fb: FormBuilder, private router: Router) {\r\n\r\n        this.builderRegisterForm();\r\n    }\r\n\r\n\r\n    private builderRegisterForm() {\r\n        this.FormPassworReset = this.fb.group({\r\n            userName: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            password: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\r\n            confirmPassword: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\r\n            roles: [['User']]\r\n        }, {\r\n            validators: MyValidators.matchPasswords\r\n        });\r\n    }\r\n\r\n    get passwordField() {\r\n        return this.FormPassworReset.get('password')!;\r\n    }\r\n\r\n    get confirmPasswordField() {\r\n        return this.FormPassworReset.get('confirmPassword')!;\r\n    }\r\n\r\n    get emailField() {\r\n        return this.FormPassworReset.get('email')!;\r\n    }\r\n\r\n    get userNameField() {\r\n        return this.FormPassworReset.get('userName')!;\r\n    }\r\n\r\n}\r\n","<form class=\"w-25 m-auto\">\r\n    <div class=\" text-center mb-3\">\r\n        <p>continue with</p>\r\n        <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\r\n            <i class=\"fab fa-google\"></i>\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n        </button>\r\n\r\n        <button type=\"button\" class=\"btn btn-link btn-floating mx-1\">\r\n            <i class=\"fab fa-github\"></i>\r\n        </button>\r\n    </div>\r\n\r\n    <p class=\"text-center\">or:</p>\r\n\r\n    <!-- username input -->\r\n    <div class=\"form-outline mb-4\">\r\n        <label class=\"form-label\" for=\"loginName\">Username</label>\r\n        <input type=\"text\" id=\"loginName\" formControlName=\"userName\" class=\"form-control\" required />\r\n        <!-- <div class=\"text-danger\" *ngIf=\"userNameFieldLogin.touched && userNameFieldLogin.invalid\"> -->\r\n        <!-- El nombre de usuario es requerido.\r\n        </div> -->\r\n\r\n    </div>\r\n\r\n    <!-- Submit button -->\r\n    <!-- <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\" [disabled]=\"!formLogin.valid\">Sign -->\r\n    <button type=\"submit\" class=\"btn btn-primary btn-block mb-4\"> Submit </button>\r\n\r\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}