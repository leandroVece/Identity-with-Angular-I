{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MyValidators } from 'src/app/Utils/Validatoes';\nlet HomeComponent = class HomeComponent {\n  constructor(userServices, fb) {\n    this.userServices = userServices;\n    this.fb = fb;\n    this.builderLoginForm();\n    this.builderRegisterForm();\n  }\n  ngAfterViewInit() {\n    const triggerTabList = Array.from(document.querySelectorAll('#ex1 a'));\n    triggerTabList.forEach(function (triggerEl) {\n      const tabTrigger = new bootstrap.Tab(triggerEl);\n      triggerEl.addEventListener('click', function (event) {\n        event.preventDefault();\n        tabTrigger.show();\n      });\n    });\n  }\n  onLogin() {\n    console.log(this.formLogin.value);\n  }\n  onRegister() {\n    console.log(this.formRegister.value);\n  }\n  builderLoginForm() {\n    this.formLogin = this.fb.group({\n      userName: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  builderRegisterForm() {\n    this.formRegister = this.fb.group({\n      userName: ['', [Validators.required]],\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: MyValidators.matchPasswords\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,YAAY,QAAQ,0BAA0B;AAgBhD,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMtBC,YAAoBC,YAA0B,EAAUC,EAAe;IAAnD,iBAAY,GAAZD,YAAY;IAAwB,OAAE,GAAFC,EAAE;IACtD,IAAI,CAACC,gBAAgB,EAAE;IACvB,IAAI,CAACC,mBAAmB,EAAE;EAC9B;EAIAC,eAAe;IACX,MAAMC,cAAc,GAAGC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACtEJ,cAAc,CAACK,OAAO,CAAC,UAAUC,SAAS;MACtC,MAAMC,UAAU,GAAG,IAAIC,SAAS,CAACC,GAAG,CAACH,SAAS,CAAC;MAE/CA,SAAS,CAACI,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK;QAC/CA,KAAK,CAACC,cAAc,EAAE;QACtBL,UAAU,CAACM,IAAI,EAAE;MACrB,CAAC,CAAC;IACN,CAAC,CAAC;EACN;EAEAC,OAAO;IACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC;EACrC;EAEAC,UAAU;IACNJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACI,YAAY,CAACF,KAAK,CAAC;EACxC;EAGQrB,gBAAgB;IACpB,IAAI,CAACoB,SAAS,GAAG,IAAI,CAACrB,EAAE,CAACyB,KAAK,CAAC;MAC3BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC/B,UAAU,CAACgC,QAAQ,CAAC,CAAC;MACrCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjC,UAAU,CAACgC,QAAQ,EAAEhC,UAAU,CAACkC,SAAS,CAAC,CAAC,CAAC,CAAC;KAChE,CAAC;EACN;EAEQ3B,mBAAmB;IACvB,IAAI,CAACsB,YAAY,GAAG,IAAI,CAACxB,EAAE,CAACyB,KAAK,CAAC;MAC9BC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC/B,UAAU,CAACgC,QAAQ,CAAC,CAAC;MACrCG,KAAK,EAAE,CAAC,EAAE,EAAE,CAACnC,UAAU,CAACgC,QAAQ,CAAC,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACjC,UAAU,CAACgC,QAAQ,EAAEhC,UAAU,CAACkC,SAAS,CAAC,CAAC,CAAC,EAAEjC,YAAY,CAACmC,aAAa,CAAC,CAAC;MAC1FC,eAAe,EAAE,CAAC,EAAE,EAAE,CAACrC,UAAU,CAACgC,QAAQ,CAAC;KAC9C,EAAE;MACCM,UAAU,EAAErC,YAAY,CAACsC;KAC5B,CAAC;EACN;CACH;AAnDYrC,aAAa,eAPzBH,SAAS,CAAC;EACPyC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACrC,CAAC,GAGWxC,aAAa,CAmDzB;SAnDYA,aAAa","names":["Component","Validators","MyValidators","HomeComponent","constructor","userServices","fb","builderLoginForm","builderRegisterForm","ngAfterViewInit","triggerTabList","Array","from","document","querySelectorAll","forEach","triggerEl","tabTrigger","bootstrap","Tab","addEventListener","event","preventDefault","show","onLogin","console","log","formLogin","value","onRegister","formRegister","group","userName","required","password","minLength","email","validPassword","confirmPassword","validators","matchPasswords","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MyValidators } from 'src/app/Utils/Validatoes';\r\n\r\nimport { UserServices } from 'src/app/services/userServices';\r\n\r\n\r\n\r\n\r\ndeclare var bootstrap: any;\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n})\r\n\r\n\r\nexport class HomeComponent {\r\n\r\n    //AoiResp: Roles[] = [];\r\n    formLogin!: FormGroup;\r\n    formRegister!: FormGroup;\r\n\r\n    constructor(private userServices: UserServices, private fb: FormBuilder) {\r\n        this.builderLoginForm();\r\n        this.builderRegisterForm();\r\n    }\r\n\r\n\r\n\r\n    ngAfterViewInit() {\r\n        const triggerTabList = Array.from(document.querySelectorAll('#ex1 a'));\r\n        triggerTabList.forEach(function (triggerEl) {\r\n            const tabTrigger = new bootstrap.Tab(triggerEl);\r\n\r\n            triggerEl.addEventListener('click', function (event) {\r\n                event.preventDefault();\r\n                tabTrigger.show();\r\n            });\r\n        });\r\n    }\r\n\r\n    onLogin() {\r\n        console.log(this.formLogin.value)\r\n    }\r\n\r\n    onRegister() {\r\n        console.log(this.formRegister.value)\r\n    }\r\n\r\n\r\n    private builderLoginForm() {\r\n        this.formLogin = this.fb.group({\r\n            userName: ['', [Validators.required]],\r\n            password: ['', [Validators.required, Validators.minLength(8)]],\r\n        })\r\n    }\r\n\r\n    private builderRegisterForm() {\r\n        this.formRegister = this.fb.group({\r\n            userName: ['', [Validators.required]],\r\n            email: ['', [Validators.required]],\r\n            password: ['', [Validators.required, Validators.minLength(8), MyValidators.validPassword]],\r\n            confirmPassword: ['', [Validators.required]],\r\n        }, {\r\n            validators: MyValidators.matchPasswords\r\n        });\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}