{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/TokenServices\";\nimport * as i3 from \"@auth0/angular-jwt\";\nexport class SettingsComponent {\n  constructor(formBuilder, TokenService, jwtHelper) {\n    this.formBuilder = formBuilder;\n    this.TokenService = TokenService;\n    this.jwtHelper = jwtHelper;\n    this.builderSettingsForm();\n    this.token = TokenService.getToken();\n    //console.log(this.token.tokenAcces.Token)\n    //console.log(TokenService.getToken()?.tokenAcces?.Token)\n    this.decover = this.token.tokenAcces.Token;\n    console.log(this.decover);\n    console.log(this.jwtHelper.decodeToken(this.token.tokenAcces.Token));\n  }\n  submitForm() {\n    // Aquí puedes manejar el envío del formulario, como enviar los datos al servidor\n    console.log(this.checkboxForm.value);\n  }\n  builderSettingsForm() {\n    this.checkboxForm = this.formBuilder.group({\n      option1: false // Valor inicial del checkbox\n    });\n  }\n}\n\nSettingsComponent.ɵfac = function SettingsComponent_Factory(t) {\n  return new (t || SettingsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TokenService), i0.ɵɵdirectiveInject(i3.JwtHelperService));\n};\nSettingsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SettingsComponent,\n  selectors: [[\"app-settings\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"\"], [1, \"container\", \"d-flex\", \"justify-content-center\"], [1, \"container\", \"d-flex\", \"justify-content-center\", \"mt-5\"], [1, \"border\", \"border-black\", \"p-4\", \"rounded\", 2, \"width\", \"75%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"border-bottom\", \"border-secondary\"], [1, \"form-check\", \"form-switch\", \"p-0\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"for\", \"switchCheckLabelStart\", 1, \"form-check-label\", \"h4\"], [\"formControlName\", \"option1\", \"type\", \"checkbox\", \"role\", \"switch\", \"id\", \"switchCheckLabelStart\", 1, \"form-check-input\", \"ms-0\", \"h4\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-end\", \"mt-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-3\"]],\n  template: function SettingsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Configuracion de cuenta\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4);\n      i0.ɵɵlistener(\"ngSubmit\", function SettingsComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.submitForm();\n      });\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"label\", 7);\n      i0.ɵɵtext(9, \"Verificacion de 2 pasos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 9)(12, \"button\", 10);\n      i0.ɵɵtext(13, \"Enviar\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.checkboxForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAaA,OAAM,MAAOA,iBAAiB;EAM1BC,YAAoBC,WAAwB,EAAUC,YAA0B,EAAUC,SAA2B;IAAjG,gBAAW,GAAXF,WAAW;IAAuB,iBAAY,GAAZC,YAAY;IAAwB,cAAS,GAATC,SAAS;IAC/F,IAAI,CAACC,mBAAmB,EAAE;IAC1B,IAAI,CAACC,KAAK,GAAGH,YAAY,CAACI,QAAQ,EAAG;IACrC;IACA;IACA,IAAI,CAACC,OAAO,GAAG,IAAI,CAACF,KAAK,CAACG,UAAU,CAACC,KAAK;IAC1CC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,OAAO,CAAC;IACzBG,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,SAAS,CAACS,WAAW,CAAC,IAAI,CAACP,KAAK,CAACG,UAAU,CAACC,KAAK,CAAC,CAAC;EACxE;EAEAI,UAAU;IACN;IACAH,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,YAAY,CAACC,KAAK,CAAC;EAExC;EAEQX,mBAAmB;IACvB,IAAI,CAACU,YAAY,GAAG,IAAI,CAACb,WAAW,CAACe,KAAK,CAAC;MACvCC,OAAO,EAAE,KAAK,CAAE;KACnB,CAAC;EACN;;;AA1BSlB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAmB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCb9BC,kCAAkB;MAEsCA,uCAAuB;MAAAA,iBAAK;MAEhFA,8BAA0D;MAEjBA;QAAA,OAAYC,gBAAY;MAAA,EAAC;MACtDD,8BAA4C;MAE2BA,uCAAuB;MAAAA,iBAAQ;MAC9FA,4BACiC;MACrCA,iBAAM;MAEVA,+BAA8D;MACPA,uBAAM;MAAAA,iBAAS;;;MATpEA,eAA0B;MAA1BA,4CAA0B","names":["SettingsComponent","constructor","formBuilder","TokenService","jwtHelper","builderSettingsForm","token","getToken","decover","tokenAcces","Token","console","log","decodeToken","submitForm","checkboxForm","value","group","option1","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\settings\\settings.component.ts","D:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\settings\\settings.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { TokenService } from '../../services/TokenServices';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { Tokens } from 'src/app/Models/Token.models';\r\n\r\n@Component({\r\n    selector: 'app-settings',\r\n    templateUrl: './settings.component.html',\r\n    styleUrls: ['./settings.component.css']\r\n})\r\n\r\nexport class SettingsComponent {\r\n\r\n    checkboxForm!: FormGroup;\r\n    token!: Tokens;\r\n    decover!: string;\r\n\r\n    constructor(private formBuilder: FormBuilder, private TokenService: TokenService, private jwtHelper: JwtHelperService) {\r\n        this.builderSettingsForm();\r\n        this.token = TokenService.getToken()!;\r\n        //console.log(this.token.tokenAcces.Token)\r\n        //console.log(TokenService.getToken()?.tokenAcces?.Token)\r\n        this.decover = this.token.tokenAcces.Token;\r\n        console.log(this.decover)\r\n        console.log(this.jwtHelper.decodeToken(this.token.tokenAcces.Token))\r\n    }\r\n\r\n    submitForm() {\r\n        // Aquí puedes manejar el envío del formulario, como enviar los datos al servidor\r\n        console.log(this.checkboxForm.value);\r\n\r\n    }\r\n\r\n    private builderSettingsForm() {\r\n        this.checkboxForm = this.formBuilder.group({\r\n            option1: false, // Valor inicial del checkbox\r\n        });\r\n    }\r\n\r\n}","<section class=\"\">\r\n\r\n    <h1 class=\"container d-flex justify-content-center\">Configuracion de cuenta</h1>\r\n\r\n    <div class=\"container d-flex justify-content-center mt-5\">\r\n        <div class=\"border border-black p-4 rounded\" style=\"width: 75%;\">\r\n            <form [formGroup]=\"checkboxForm\" (ngSubmit)=\"submitForm()\">\r\n                <div class=\"border-bottom border-secondary\">\r\n                    <div class=\"form-check form-switch p-0 d-flex justify-content-between align-items-center\">\r\n                        <label class=\"form-check-label h4\" for=\"switchCheckLabelStart\">Verificacion de 2 pasos</label>\r\n                        <input class=\"form-check-input ms-0 h4\" formControlName=\"option1\" type=\"checkbox\" role=\"switch\"\r\n                            id=\"switchCheckLabelStart\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"d-grid gap-2 d-md-flex  justify-content-end mt-5\">\r\n                    <button type=\"submit\" class=\"btn btn-primary mt-3\">Enviar</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}