{"ast":null,"code":"import { routes } from '../app-routing.module';\nimport { permissions } from '../permissions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/AuthServices.services\";\nimport * as i3 from \"@angular/common\";\nfunction NavComponent_li_2_div_1_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 6);\n    i0.ɵɵlistener(\"click\", function NavComponent_li_2_div_1_a_1_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const route_r1 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.navigateTo(route_r1.path));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const route_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(route_r1.path === \"/\" ? \"Home\" : route_r1.path);\n  }\n}\nfunction NavComponent_li_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NavComponent_li_2_div_1_a_1_Template, 2, 1, \"a\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const route_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.hasPermission(route_r1.path));\n  }\n}\nfunction NavComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 3);\n    i0.ɵɵtemplate(1, NavComponent_li_2_div_1_Template, 2, 1, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const route_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", route_r1.path);\n  }\n}\nexport class NavComponent {\n  constructor(router, authService) {\n    this.router = router;\n    this.authService = authService;\n    this.paths = routes[0].children.filter(route => !!route.path);\n    this.isLogin = this.authService.isLoggedIn();\n  }\n  // Si necesitas navegar a una ruta desde el componente\n  navigateTo(path) {\n    this.router.navigate([path]);\n  }\n  //hice los cambios pero no los probe\n  hasPermission(routePath) {\n    const currentUserRole = this.authService.getUserRole();\n    if (currentUserRole) {\n      const permission = permissions[routePath];\n      if (!this.isLogin) {\n        // Allow non-logged-in users for specific routes\n        return permission === 'No logueado';\n      } else {\n        // Check if user role is included in permitted roles for the route\n        //const userRole = currentUserRole.some(role => permission.includes(role));\n        const userRole = currentUserRole.includes(\"User\");\n        console.log(userRole);\n        return !!permission && userRole;\n      }\n    }\n    return false;\n  }\n}\nNavComponent.ɵfac = function NavComponent_Factory(t) {\n  return new (t || NavComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nNavComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavComponent,\n  selectors: [[\"app-nav\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"m-2\"], [1, \"nav\", \"mb-5\"], [\"class\", \"nav-item p-2\", 4, \"ngFor\", \"ngForOf\"], [1, \"nav-item\", \"p-2\"], [4, \"ngIf\"], [\"class\", \"nav-link\", \"routerLinkActive\", \"active\", 3, \"click\", 4, \"ngIf\"], [\"routerLinkActive\", \"active\", 1, \"nav-link\", 3, \"click\"]],\n  template: function NavComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ul\", 1);\n      i0.ɵɵtemplate(2, NavComponent_li_2_Template, 2, 1, \"li\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.paths);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.RouterLinkActive],\n  styles: [\".nav-link[_ngcontent-%COMP%] {\\r\\n    cursor: pointer;\\r\\n    font-size: 20px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9uYXYvbmF2LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsZUFBZTtBQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi5uYXYtbGluayB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAKA,SAASA,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;;;;;;;;ICF5BC,4BAC8B;IADwBA;MAAAA;MAAA;MAAA;MAAA,OAASA,+CAAuB;IAAA,EAAC;IACzDA,YAGxB;IAAAA,iBAAI;;;;IAHoBA,eAGxB;IAHwBA,oEAGxB;;;;;IALVA,2BAAwB;IACpBA,oEAIU;IACdA,iBAAM;;;;;IALmBA,eAA+B;IAA/BA,0DAA+B;;;;;IAF5DA,6BAAqD;IACjDA,kEAMM;IACVA,iBAAK;;;;IAPKA,eAAgB;IAAhBA,oCAAgB;;;ADYlC,OAAM,MAAOC,YAAY;EAKrBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IACnD,IAAI,CAACC,KAAK,GAAGP,MAAM,CAAC,CAAC,CAAC,CAACQ,QAAS,CAACC,MAAM,CAACC,KAAK,IAAI,CAAC,CAACA,KAAK,CAACC,IAAI,CAAC;IAC9D,IAAI,CAACC,OAAO,GAAG,IAAI,CAACN,WAAW,CAACO,UAAU,EAAE;EAChD;EAEA;EACAC,UAAU,CAACH,IAAY;IACnB,IAAI,CAACN,MAAM,CAACU,QAAQ,CAAC,CAACJ,IAAI,CAAC,CAAC;EAChC;EAEA;EACAK,aAAa,CAACC,SAAiB;IAE3B,MAAMC,eAAe,GAAG,IAAI,CAACZ,WAAW,CAACa,WAAW,EAAE;IACtD,IAAID,eAAe,EAAE;MACjB,MAAME,UAAU,GAAGnB,WAAW,CAACgB,SAAqC,CAAC;MACrE,IAAI,CAAC,IAAI,CAACL,OAAO,EAAE;QACf;QACA,OAAOQ,UAAU,KAAK,aAAa;OACtC,MAAM;QACH;QACA;QAEA,MAAMC,QAAQ,GAAGH,eAAe,CAACI,QAAQ,CAAC,MAAM,CAAC;QACjDC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QAErB,OAAO,CAAC,CAACD,UAAU,IAAIC,QAAQ;;;IAGvC,OAAO,KAAK;EAChB;;AAnCSlB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfzB3B,8BAAiB;MAETA,2DAQK;MACTA,iBAAK;;;MATqBA,eAAQ;MAARA,mCAAQ","names":["routes","permissions","i0","NavComponent","constructor","router","authService","paths","children","filter","route","path","isLogin","isLoggedIn","navigateTo","navigate","hasPermission","routePath","currentUserRole","getUserRole","permission","userRole","includes","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["d:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\nav\\nav.component.ts","d:\\proyecto web c shrap\\Angular.net\\UserLogin\\Login\\ClientApp\\src\\app\\Components\\nav\\nav.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router, Route } from '@angular/router';\r\nimport { AuthService } from '../../services/AuthServices.services';\r\n\r\n\r\nimport { routes } from '../app-routing.module';\r\nimport { permissions } from '../permissions';\r\n\r\n\r\n@Component({\r\n    selector: 'app-nav',\r\n    templateUrl: './nav.component.html',\r\n    styleUrls: ['./nav.component.css']\r\n})\r\n\r\nexport class NavComponent {\r\n\r\n    paths: Route[];\r\n    isLogin!: boolean;\r\n\r\n    constructor(private router: Router, private authService: AuthService) {\r\n        this.paths = routes[0].children!.filter(route => !!route.path);\r\n        this.isLogin = this.authService.isLoggedIn();\r\n    }\r\n\r\n    // Si necesitas navegar a una ruta desde el componente\r\n    navigateTo(path: string) {\r\n        this.router.navigate([path]);\r\n    }\r\n\r\n    //hice los cambios pero no los probe\r\n    hasPermission(routePath: string): boolean {\r\n\r\n        const currentUserRole = this.authService.getUserRole();\r\n        if (currentUserRole) {\r\n            const permission = permissions[routePath as keyof typeof permissions];\r\n            if (!this.isLogin) {\r\n                // Allow non-logged-in users for specific routes\r\n                return permission === 'No logueado';\r\n            } else {\r\n                // Check if user role is included in permitted roles for the route\r\n                //const userRole = currentUserRole.some(role => permission.includes(role));\r\n\r\n                const userRole = currentUserRole.includes(\"User\");\r\n                console.log(userRole)\r\n\r\n                return !!permission && userRole;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n}","<nav class=\"m-2\">\r\n    <ul class=\"nav mb-5\">\r\n        <li *ngFor=\"let route of paths\" class=\"nav-item p-2\">\r\n            <div *ngIf=\"route.path\">\r\n                <a class=\"nav-link\" *ngIf=\"hasPermission(route.path)\" (click)=\"navigateTo(route.path!)\"\r\n                    routerLinkActive=\"active\">{{\r\n                    route.path === '/' ?\r\n                    'Home' : route.path\r\n                    }}</a>\r\n            </div>\r\n        </li>\r\n    </ul>\r\n</nav>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}