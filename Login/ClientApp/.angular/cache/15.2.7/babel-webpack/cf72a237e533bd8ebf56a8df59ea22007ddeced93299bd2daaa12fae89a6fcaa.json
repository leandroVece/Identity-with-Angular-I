{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserServices {\n  constructor(http) {\n    this.http = http;\n  }\n  getRoles() {\n    return this.http.get('https://localhost:5121/api/Admin').pipe(catchError(error => {\n      console.log('Error en la solicitud:', error);\n      return throwError(() => new Error(error));\n    }));\n  }\n}\nUserServices.ɵfac = function UserServices_Factory(t) {\n  return new (t || UserServices)(i0.ɵɵinject(i1.HttpClient));\n};\nUserServices.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserServices,\n  factory: UserServices.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,YAAY;EAErBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,QAAQ;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,kCAAkC,CAAC,CAC5DC,IAAI,CAACN,UAAU,CAACO,KAAK,IAAG;MACrBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;MAC5C,OAAOR,UAAU,CAAC,MAAM,IAAIW,KAAK,CAACH,KAAK,CAAC,CAAC;IAC7C,CAAC,CAAC,CACD;EACT;;AAXSN,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAU,SAAZV,YAAY;EAAAW,YAFT;AAAM","names":["throwError","catchError","UserServices","constructor","http","getRoles","get","pipe","error","console","log","Error","factory","providedIn"],"sourceRoot":"","sources":["D:\\proyecto web c shrap\\Angular.net\\UserLogin\\login\\ClientApp\\src\\app\\services\\userServices.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Roles } from '../Models/Roles.models';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserServices {\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getRoles(): Observable<Roles[]> {\r\n        return this.http.get<Roles[]>('https://localhost:5121/api/Admin')\r\n            .pipe(catchError(error => {\r\n                console.log('Error en la solicitud:', error);\r\n                return throwError(() => new Error(error));\r\n            })\r\n            );\r\n    }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}